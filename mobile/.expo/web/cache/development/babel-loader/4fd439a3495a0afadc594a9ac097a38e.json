{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/jeciane/Documentos/Next Level Week/aulas/mobile/src/pages/Points/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Constants from \"expo-constants\";\nimport { Feather as Icon } from '@expo/vector-icons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from \"expo-location\";\nimport api from \"../../services/api\";\n\nvar Point = function Point() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      points = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItems = _useState6[0],\n      setSelectedItems = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialPosition = _useState8[0],\n      setInitialPosition = _useState8[1];\n\n  var navigation = useNavigation();\n  var route = useRoute();\n  var routeParams = route.params;\n  useEffect(function () {\n    function loadPoints() {\n      var response;\n      return _regeneratorRuntime.async(function loadPoints$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/items\"));\n\n            case 2:\n              response = _context.sent;\n              setItems(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPoints();\n  }, []);\n  useEffect(function () {\n    function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context2.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Ooooops...\", \"Precisamos de sua permissão para obter a localização\");\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({\n                enableHighAccuracy: true\n              }));\n\n            case 9:\n              location = _context2.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInitialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPosition();\n  });\n  useEffect(function () {\n    function loadPoints() {\n      var response;\n      return _regeneratorRuntime.async(function loadPoints$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/points\", {\n                params: {\n                  city: routeParams.city,\n                  uf: routeParams.uf,\n                  items: selectedItems\n                }\n              }));\n\n            case 2:\n              response = _context3.sent;\n              setPoints(response.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPoints();\n  }, [selectedItems]);\n\n  function handleNavigateBack() {\n    navigation.goBack();\n  }\n\n  function handleNavigateToDetail(id) {\n    navigation.navigate(\"Detail\", {\n      point_id: id\n    });\n  }\n\n  function handleSelectItem(id) {\n    var alreadySelected = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySelected >= 0) {\n      var filteredItems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleNavigateBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"arrow-left\",\n    size: 20,\n    color: \"#34cb79\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Bem vindo.\"), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Encontre no mapa um ponto de coleta.\"), React.createElement(View, {\n    style: styles.mapContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, initialPosition[0] !== 0 && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: initialPosition[0],\n      longitude: initialPosition[1],\n      latitudeDelta: 0.014,\n      longitudeDelta: 0.014\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, points.map(function (point) {\n    return React.createElement(Marker, {\n      key: String(point.id),\n      style: styles.mapMarker,\n      onPress: function onPress() {\n        return handleNavigateToDetail(point.id);\n      },\n      coordinate: {\n        latitude: point.latitude,\n        longitude: point.longitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }, React.createElement(View, {\n      style: styles.mapMarkerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: styles.mapMarkerImage,\n      source: {\n        uri: point.image\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      style: styles.mapMarkerTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, point.name)));\n  })))), React.createElement(View, {\n    style: styles.itemsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingHorizontal: 32\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      activeOpacity: 0.6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, item.title));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Ubuntu_700Bold\",\n    marginTop: 24\n  },\n  description: {\n    color: \"#6C6C80\",\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: \"Roboto_400Regular\"\n  },\n  mapContainer: {\n    flex: 1,\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: 16\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: \"#34CB79\",\n    flexDirection: \"column\",\n    borderRadius: 8,\n    overflow: \"hidden\",\n    alignItems: \"center\"\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: \"cover\"\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: \"Roboto_400Regular\",\n    color: \"#FFF\",\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: \"row\",\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    borderColor: \"#eee\",\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\"\n  },\n  selectedItem: {\n    borderColor: \"#34CB79\",\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: \"Roboto_400Regular\",\n    textAlign: \"center\",\n    fontSize: 13\n  }\n});\nexport default Point;","map":{"version":3,"sources":["/home/jeciane/Documentos/Next Level Week/aulas/mobile/src/pages/Points/index.tsx"],"names":["React","useState","useEffect","Constants","Feather","Icon","useNavigation","useRoute","MapView","Marker","SvgUri","Location","api","Point","items","setItems","points","setPoints","selectedItems","setSelectedItems","initialPosition","setInitialPosition","navigation","route","routeParams","params","loadPoints","get","response","data","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","enableHighAccuracy","location","coords","latitude","longitude","city","uf","handleNavigateBack","goBack","handleNavigateToDetail","id","navigate","point_id","handleSelectItem","alreadySelected","findIndex","item","filteredItems","filter","styles","container","title","description","mapContainer","map","latitudeDelta","longitudeDelta","point","String","mapMarker","mapMarkerContainer","mapMarkerImage","uri","image","mapMarkerTitle","name","itemsContainer","paddingHorizontal","includes","selectedItem","image_url","itemTitle","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","width","borderRadius","overflow","height","backgroundColor","flexDirection","alignItems","resizeMode","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport Constants from \"expo-constants\";\nimport { Feather as Icon} from '@expo/vector-icons'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport { View, StyleSheet, TouchableOpacity, Text, ScrollView, Image, Alert,} from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\nimport { SvgUri } from 'react-native-svg';\nimport * as Location from \"expo-location\";\n\nimport api from '../../services/api';\n\ninterface Item {\n  id: number;\n  title: string;\n  image_url: string;\n}\n\ninterface Point {\n  id: number;\n  name: string;\n  latitude: number;\n  longitude: number;\n  image: string;\n}\n\ninterface Params {\n  uf: string;\n  city: string;\n}\n\nconst Point = () => {\n  const [items, setItems] = useState<Item[]>([]);\n  const [points, setPoints] = useState<Point[]>([]);\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([\n    0,\n    0,\n  ]);\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  const routeParams = route.params as Params;\n\n    useEffect(() => {\n      async function loadPoints() {\n        const response = await api.get(\"/items\");\n  \n        setItems(response.data);\n      }\n  \n      loadPoints();\n    }, []);\n\n    useEffect(() => {\n      async function loadPosition() {\n        const { status } = await Location.requestPermissionsAsync();\n  \n        if (status !== \"granted\") {\n          Alert.alert(\n            \"Ooooops...\",\n            \"Precisamos de sua permissão para obter a localização\"\n          );\n          return;\n        }\n  \n        const location = await Location.getCurrentPositionAsync({ enableHighAccuracy: true })\n  \n        const { latitude, longitude } = location.coords;\n  \n        setInitialPosition([latitude, longitude]);\n      }\n  \n      loadPosition();\n    });\n  \n    useEffect(() => {\n      async function loadPoints() {\n        const response = await api.get(\"/points\", {\n          params: {\n            city: routeParams.city,\n            uf: routeParams.uf,\n            items: selectedItems\n          },\n        });\n  \n        setPoints(response.data);\n      }\n  \n      loadPoints();\n    }, [selectedItems]);\n    \n    function handleNavigateBack() {\n      navigation.goBack();\n    }\n  \n    function handleNavigateToDetail(id: number) {\n      navigation.navigate(\"Detail\", { point_id: id });\n    }\n  \n    function handleSelectItem(id: number) {\n      const alreadySelected = selectedItems.findIndex((item) => item === id);\n  \n      if (alreadySelected >= 0) {\n        const filteredItems = selectedItems.filter((item) => item !== id);\n  \n        setSelectedItems(filteredItems);\n      } else {\n        setSelectedItems([...selectedItems, id]);\n      }\n    }\n\n    return (\n      <>\n        <View style={styles.container}>\n          <TouchableOpacity onPress={handleNavigateBack}>\n            <Icon name=\"arrow-left\" size={20} color=\"#34cb79\" />\n          </TouchableOpacity>\n  \n          <Text style={styles.title}>Bem vindo.</Text>\n          <Text style={styles.description}>\n            Encontre no mapa um ponto de coleta.\n          </Text>\n  \n          <View style={styles.mapContainer}>\n            {initialPosition[0] !== 0 && (\n              <MapView\n                style={styles.map}\n                initialRegion={{\n                  latitude: initialPosition[0],\n                  longitude: initialPosition[1],\n                  latitudeDelta: 0.014,\n                  longitudeDelta: 0.014,\n                }}\n              >\n                {points.map((point) => (\n                  <Marker\n                    key={String(point.id)}\n                    style={styles.mapMarker}\n                    onPress={() => handleNavigateToDetail(point.id)}\n                    coordinate={{\n                      latitude: point.latitude,\n                      longitude: point.longitude,\n                    }}\n                  >\n                    <View style={styles.mapMarkerContainer}>\n                      <Image\n                        style={styles.mapMarkerImage}\n                        source={{\n                          uri: point.image,\n                        }}\n                      />\n                      <Text style={styles.mapMarkerTitle}>{point.name}</Text>\n                    </View>\n                  </Marker>\n                ))}\n              </MapView>\n            )}\n          </View>\n        </View>\n        <View style={styles.itemsContainer}>\n          <ScrollView\n            contentContainerStyle={{\n              paddingHorizontal: 32,\n            }}\n            horizontal\n            showsHorizontalScrollIndicator={false}\n          >\n            {items.map((item) => (\n              <TouchableOpacity\n                key={String(item.id)}\n                style={[\n                  styles.item,\n                  selectedItems.includes(item.id) ? styles.selectedItem : {},\n                ]}\n                onPress={() => handleSelectItem(item.id)}\n                activeOpacity={0.6}\n              >\n                <SvgUri width={42} height={42} uri={item.image_url} />\n                <Text style={styles.itemTitle}>{item.title}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      </>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingHorizontal: 32,\n      paddingTop: 20 + Constants.statusBarHeight,\n    },\n  \n    title: {\n      fontSize: 20,\n      fontFamily: \"Ubuntu_700Bold\",\n      marginTop: 24,\n    },\n  \n    description: {\n      color: \"#6C6C80\",\n      fontSize: 16,\n      marginTop: 4,\n      fontFamily: \"Roboto_400Regular\",\n    },\n  \n    mapContainer: {\n      flex: 1,\n      width: \"100%\",\n      borderRadius: 10,\n      overflow: \"hidden\",\n      marginTop: 16,\n    },\n  \n    map: {\n      width: \"100%\",\n      height: \"100%\",\n    },\n  \n    mapMarker: {\n      width: 90,\n      height: 80,\n    },\n  \n    mapMarkerContainer: {\n      width: 90,\n      height: 70,\n      backgroundColor: \"#34CB79\",\n      flexDirection: \"column\",\n      borderRadius: 8,\n      overflow: \"hidden\",\n      alignItems: \"center\",\n    },\n  \n    mapMarkerImage: {\n      width: 90,\n      height: 45,\n      resizeMode: \"cover\",\n    },\n  \n    mapMarkerTitle: {\n      flex: 1,\n      fontFamily: \"Roboto_400Regular\",\n      color: \"#FFF\",\n      fontSize: 13,\n      lineHeight: 23,\n    },\n  \n    itemsContainer: {\n      flexDirection: \"row\",\n      marginTop: 16,\n      marginBottom: 32,\n    },\n  \n    item: {\n      backgroundColor: \"#fff\",\n      borderWidth: 2,\n      borderColor: \"#eee\",\n      height: 120,\n      width: 120,\n      borderRadius: 8,\n      paddingHorizontal: 16,\n      paddingTop: 20,\n      paddingBottom: 16,\n      marginRight: 8,\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n  \n      textAlign: \"center\",\n    },\n  \n    selectedItem: {\n      borderColor: \"#34CB79\",\n      borderWidth: 2,\n    },\n  \n    itemTitle: {\n      fontFamily: \"Roboto_400Regular\",\n      textAlign: \"center\",\n      fontSize: 13,\n    },\n  });\n\nexport default Point;"]},"metadata":{},"sourceType":"module"}